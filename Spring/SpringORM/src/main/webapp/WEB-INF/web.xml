<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>SpringWeb</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- Spring Web MVC provides a built-in servlet called the DispatcherServlet. It provides default
  configuration for handling HTTP requests. The servlet works out of the box; you just have to map
  it in your web.xml. -->
  
 <servlet>
 	<servlet-name>DispatcherServlet</servlet-name>
 	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
 	<!-- This tells the web container to IMMEDIATELY make an instance of this servlet class.
 	This is useful because the first HTTP request that the client makes is slowed down otherwise
 	as the web container will have to make the instance at the first HTTP request if we don't load
 	the servlet ahead of time. -->
 	<load-on-startup>0</load-on-startup>
 </servlet>
 <servlet-mapping>
 	<servlet-name>DispatcherServlet</servlet-name>
 	<url-pattern>/api/*</url-pattern>
 </servlet-mapping>
</web-app>